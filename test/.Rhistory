addMarkers(lat = lat, lng = lng,
popup = location_block)
crimemap <-  homicides %>%
leaflet() %>%
addTiles() %>%
addMarkers(lat = homicides$lat, lng = homicides$lng,
popup = location_block)
crimemap <-  homicides %>%
leaflet() %>%
addTiles() %>%
addMarkers(lat = homicides$lat, lng = homicides$lng,
homicides$popup = location_block)
crimemap <-  homicides %>%
leaflet() %>%
addTiles() %>%
addMarkers(popup = location_block)
head(crimedata)
crimemap <-  homicides %>%
leaflet() %>%
addTiles() %>%
addMarkers()
crimemap
crimemap <-  homicides %>%
filter(year == 2016) %>%
leaflet() %>%
addTiles() %>%
addMarkers()
crimemap
crimemap <-  homicides %>%
filter(year == 2016) %>%
leaflet() %>%
addTiles() %>%
addMarkers(popup = homicides$location_block)
crimemap
plot(homicidesum$year, homicidesum$n, type = "b")
line(lm(homicidesum$n ~ homicidesum$year))
homicidetrend <- lm(homicidesum$n ~ homicidesum$year)
homicidetrend
line(x = homicidesum$year, y = predict(homicidetrend))
?line
lines(x = homicidesum$year, y = predict(homicidetrend))
homicides <- crimedata %>% filter(text_general_code == "Homicide - Criminal", year <2017)
homicidesum <- homicides %>% count(year,text_general_code) %>% arrange(year)
plot(homicidesum$year, homicidesum$n, type = "b",
main = "Philadelphia County Criminal Homicides by Year, 2006-2016")
homicidetrend <- lm(homicidesum$n ~ homicidesum$year)
lines(x = homicidesum$year, y = predict(homicidetrend))
?plot
plot(homicidesum$year, homicidesum$n, type = "b",
main = "Philadelphia County Criminal Homicides by Year, 2006-2016",
col = "navyblue",
lwd = 3)
abline(lm(homicidedtrend ~ year))
abline(lm(homicidtrend ~ year))
abline(lm(homicidetrend ~ year))
abline(lm(n ~ year))
abline(lm(homicidesum$n ~ homicidesum$year))
plot(homicidesum$year, homicidesum$n, type = "b",
main = "Philadelphia County Criminal Homicides by Year, 2006-2016",
col = "navyblue",
lwd = 3)
abline(lm(homicidesum$n ~ homicidesum$year) ,col = "maroon", lty = 3)
plot(homicidesum$year, homicidesum$n, type = "b",
main = "Philadelphia County Criminal Homicides by Year, 2006-2016",
col = "navyblue",
lwd = 3)
abline(lm(homicidesum$n ~ homicidesum$year) ,col = "maroon", lty = 3, lwd = 2)
plot(homicidesum$year, homicidesum$n, type = "b",
main = "Philadelphia County Criminal Homicides by Year, 2006-2016",
xlab = "Year",
ylab = "Number of Criminal Homicides",
col = "navyblue",
lwd = 3)
abline(lm(homicidesum$n ~ homicidesum$year) ,col = "maroon", lty = 3, lwd = 2)
plot(homicidesum$year, homicidesum$n, type = "b",
main = "Philadelphia County Criminal Homicides by Year, 2006-2016",
xlab = "Year",
ylab = "Number of Criminal Homicides",
col = "navyblue",
bty = "n",
lwd = 3)
abline(lm(homicidesum$n ~ homicidesum$year) ,col = "maroon", lty = 3, lwd = 2)
max(homicides[homicides$year == 2017, c("dispatch_date")])
homicides[homicides$year == 2017, c("dispatch_date")]
homicides[homicides$year == 2017,]
homicides <- crimedata %>% filter(text_general_code == "Homicide - Criminal")
homicidesum <- homicides %>% count(year,text_general_code) %>% arrange(year)
plot(homicidesum$year, homicidesum$n, type = "b",
main = "Philadelphia County Criminal Homicides by Year, 2006-2016",
xlab = "Year",
ylab = "Number of Criminal Homicides",
col = "navyblue",
bty = "n",
lwd = 3)
abline(lm(homicidesum$n ~ homicidesum$year) ,col = "maroon", lty = 3, lwd = 2)
homicides <- crimedata %>% filter(text_general_code == "Homicide - Criminal")
homicidesum <- homicides %>% filter(year < 2017) %>% count(year,text_general_code) %>% arrange(year)
plot(homicidesum$year, homicidesum$n, type = "b",
main = "Philadelphia County Criminal Homicides by Year, 2006-2016",
xlab = "Year",
ylab = "Number of Criminal Homicides",
col = "navyblue",
bty = "n",
lwd = 3)
abline(lm(homicidesum$n ~ homicidesum$year) ,col = "maroon", lty = 3, lwd = 2)
homicides[homicides$year == 2017,]
homicides[homicides$year == 2017, C("dispatch_date")]
homicides[homicides$year == 2017, ]$dispatch_date
max(homicides[homicides$year == 2017, ]$dispatch_date)
last2017 <- max(homicides[homicides$year == 2017, ]$dispatch_date)
first2017 <- min(homicides[homicides$year == 2017, ]$dispatch_date)
days2017 <- last2017-first2017
days2017
days2017/365
as.numeric(days2017/365)
homicides <- crimedata %>% filter(text_general_code == "Homicide - Criminal")
homicidesum <- homicides %>% count(year) %>% arrange(year)
# For 2017, provide a projected value
last2017 <- max(homicides[homicides$year == 2017, ]$dispatch_date)
first2017 <- min(homicides[homicides$year == 2017, ]$dispatch_date)
days2017 <- as.numeric(last2017-first2017)
projected2017 <- homicides$n[homicidesum$year == 2017]/days2017
projected2017
homicides$n
projected2017 <- homicidesum$n[homicidesum$year == 2017]/days2017
projected2017
days2017
projected2017 <- homicidesum$n[homicidesum$year == 2017]/(days2017/365)
projected2017
actualn2017 <- homicidesum$n[homicidesum$year == 2017]
last2017 <- max(homicides[homicides$year == 2017, ]$dispatch_date)
first2017 <- min(homicides[homicides$year == 2017, ]$dispatch_date)
fraction2017 <- as.numeric(last2017-first2017)/365
projected2017 <- actualn2017/fraction2017
projected2017
projected2017 <- round(actualn2017/fraction2017,0)
projected2017
actualn2017 <- homicidesum$n[homicidesum$year == 2017]
last2017 <- max(homicides[homicides$year == 2017, ]$dispatch_date)
first2017 <- min(homicides[homicides$year == 2017, ]$dispatch_date)
fraction2017 <- as.numeric(last2017-first2017)/365
projected2017 <- round(actualn2017/fraction2017,0)
homicidesum$n[homicidesum$year == 2017] <- projected2017
plot(homicidesum$year, homicidesum$n, type = "b",
main = "Philadelphia County Criminal Homicides by Year, 2006-2016",
xlab = "Year",
ylab = "Number of Criminal Homicides",
col = "navyblue",
bty = "n",
lwd = 3)
abline(lm(homicidesum$n ~ homicidesum$year) ,col = "maroon", lty = 3, lwd = 2)
points(x = 2017, y = projected2017, col = "red", size = 3)
?points
plot(homicidesum$year, homicidesum$n, type = "b",
main = "Philadelphia County Criminal Homicides by Year, 2006-2016",
xlab = "Year",
ylab = "Number of Criminal Homicides",
col = "navyblue",
bty = "n",
lwd = 3)
abline(lm(homicidesum$n ~ homicidesum$year) ,col = "maroon", lty = 3, lwd = 2)
points(x = 2017, y = projected2017, col = "red", lwd = 4)
points(x = 2017, y = actualn2017, col = "navyblue, lwd = 3, lty = 3")
points(x = 2017, y = actualn2017, col = "navyblue", lwd = 3, lty = 3)
actualn2017
plot(homicidesum$year, homicidesum$n, type = "b",
main = "Philadelphia County Criminal Homicides by Year, 2006-2016",
xlab = "Year",
ylab = "Number of Criminal Homicides",
ymin = actualn2017,
col = "navyblue",
bty = "n",
lwd = 3)
abline(lm(homicidesum$n ~ homicidesum$year) ,col = "maroon", lty = 3, lwd = 2)
points(x = 2017, y = projected2017, col = "red", lwd = 4)
points(x = 2017, y = actualn2017, col = "navyblue", lwd = 3, lty = 3)
plot(homicidesum$year, homicidesum$n, type = "b",
main = "Philadelphia County Criminal Homicides by Year, 2006-2016",
xlab = "Year",
ylab = "Number of Criminal Homicides",
ylim = c(actualn2017,max(homicidesum$n))
col = "navyblue",
bty = "n",
lwd = 3)
abline(lm(homicidesum$n ~ homicidesum$year) ,col = "maroon", lty = 3, lwd = 2)
points(x = 2017, y = projected2017, col = "red", lwd = 4)
points(x = 2017, y = actualn2017, col = "navyblue", lwd = 3, lty = 3)
plot(homicidesum$year, homicidesum$n, type = "b",
main = "Philadelphia County Criminal Homicides by Year, 2006-2016",
xlab = "Year",
ylab = "Number of Criminal Homicides",
ylim = c(actualn2017,max(homicidesum$n)),
col = "navyblue",
bty = "n",
lwd = 3)
abline(lm(homicidesum$n ~ homicidesum$year) ,col = "maroon", lty = 3, lwd = 2)
points(x = 2017, y = projected2017, col = "red", lwd = 4)
points(x = 2017, y = actualn2017, col = "navyblue", lwd = 3, lty = 3)
plot(homicidesum$year, homicidesum$n, type = "b",
main = "Philadelphia County Criminal Homicides by Year, 2006-2016",
xlab = "Year",
ylab = "Number of Criminal Homicides",
ylim = c(actualn2017,max(homicidesum$n)),
col = "navyblue",
bty = "n",
lwd = 3)
abline(lm(homicidesum$n ~ homicidesum$year) ,col = "maroon", lty = 3, lwd = 2)
points(x = 2017, y = projected2017, col = "red", lwd = 4)
lines(x = c(2016,2017), y = c(homicidesum$n[homicidesum$year==2016], actualn2017),
col = "navyblue", lwd = 3, lty = 3)
plot(homicidesum$year, homicidesum$n, type = "b",
main = "Philadelphia County Criminal Homicides by Year, 2006-2016",
xlab = "Year",
ylab = "Number of Criminal Homicides",
ylim = c(actualn2017,max(homicidesum$n)),
col = "navyblue",
bty = "n",
lwd = 3)
abline(lm(homicidesum$n ~ homicidesum$year) ,col = "maroon", lty = 3, lwd = 2)
points(x = 2017, y = projected2017, col = "red", lwd = 4)
lines(x = c(2016,2017), y = c(homicidesum$n[homicidesum$year==2016], actualn2017),
col = "navyblue", lwd = 3)
plot(homicidesum$year, homicidesum$n, type = "b",
main = "Philadelphia County Criminal Homicides by Year, 2006-2016",
xlab = "Year",
ylab = "Number of Criminal Homicides",
ylim = c(actualn2017,max(homicidesum$n)),
col = "navyblue",
bty = "n",
lwd = 3)
abline(lm(homicidesum$n ~ homicidesum$year) ,col = "maroon", lty = 3, lwd = 2)
points(x = 2017, y = projected2017, col = "red", lwd = 4)
lines(x = c(2016,2017), y = c(homicidesum$n[homicidesum$year==2016], actualn2017),
col = "navyblue", lwd = 3, type = "b")
plot(homicidesum$year, homicidesum$n, type = "b",
main = "Philadelphia County Criminal Homicides by Year, 2006-2016",
xlab = "Year",
ylab = "Number of Criminal Homicides",
ylim = c(actualn2017,max(homicidesum$n)),
col = "navyblue",
bty = "n",
lwd = 3)
abline(lm(homicidesum$n ~ homicidesum$year) ,col = "maroon", lty = 3, lwd = 2)
points(x = 2017, y = projected2017, col = "red", lwd = 4)
lines(x = c(2016,2017), y = c(homicidesum$n[homicidesum$year==2016], actualn2017),
col = "navyblue", lwd = 3, type = "b", lty = 3)
?write.csv
library(dplyr)
setwd("C:/Users/Dave/Documents/Data Science/Coursera/Data Products/Week 2")
crimedata <- read.csv("PhiladelphiaCrimeIncidents.csv",
stringsAsFactors = FALSE)
crimedata$dispatch_date <- as.Date(crimedata$dispatch_date)
crimedata$year <- year(crimedata$dispatch_date)
crimedata$month <- month(crimedata$dispatch_date)
crimedata$day <- day(crimedata$dispatch_date)
crimedata$text_general_code <- gsub(" $", "", crimedata$text_general_code, perl=TRUE) # Remove trailing blanks
homicides <- crimedata %>% filter(text_general_code == "Homicide - Criminal")
write.csv(homicides, "./PhiladelphiaHomicides.csv")
str(crimedata)
?addMarkers
?addCircleMarkers
knitr::opts_chunk$set(echo = TRUE)
library(leaflet)
library(lubridate)
library(dplyr)
homicides %>%
filter(year == 2016)
homicidesum
sum(homicidesum$n)
getMethod(lm)
getMethod("lm")
?getMethod
getMethod("lm","data_table")
getMethod("lm","data_frame")
getMethod("mean")
getS3method("mean")
gets3method("mean","numeric")
library(methods)
gets3method("mean","numeric")
getS3method("mean","numeric")
getMethod("mean","numeric")
?mean
getS3method("mean","numeric")
getMethod("mean","numeric")
?predict
?show
?colSums
install.packages("DDPQuiz3")
show("mean")
mean
methods("mean")
getMethod("mean.default")
getS3method("mean.default")
install.packages("plotly")
install.packages("plotly")
install.packages("plotly")
library(plotly)
install.packages("htmlwidgets")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
library(plotly)
setwd("C:/Users/Dave/Documents/Data Science/Coursera/Data Products/Week 2")
crimedata <- read.csv("PhiladelphiaCrimeIncidents.csv",
stringsAsFactors = FALSE)
homicides <- read.csv("./PhiladelphiaHomicides.csv")
str(homicides)
homicides <- read.csv("./PhiladelphiaHomicides.csv", stringsAsFactors = FALSE)
str(homicides)
setwd("C:/Users/Dave/Documents/Data Science/Coursera/Data Products/Week 2")
crimedata <- read.csv("PhiladelphiaHomicides.csv",
stringsAsFactors = FALSE)
crimedata$dispatch_date <- as.Date(crimedata$dispatch_date)
homicidesum <- homicides %>% filter(year < 2017) %>% count(year) %>% arrange(year)
str(homicides)
homicides <- read.csv("PhiladelphiaHomicides.csv",
stringsAsFactors = FALSE)
homicides$dispatch_date <- as.Date(homicides$dispatch_date)
homicidesum <- homicides %>% filter(year < 2017) %>% count(year) %>% arrange(year)
str(homicides)
homicidesum
library(plotly)
homicidesum <- homicides %>% count(year, month) %>% arrange(year)
library(dplyr)
homicidesum <- homicides %>% count(year, month) %>% arrange(year)
homicidesum
plot_ly(homicidesum, x = ~month, y = ~n, color = ~year, type = "scatter", mode = "lines")
?plot_ly
plot_ly(homicidesum, x = ~month, y = ~n, color = ~as.factor(year), type = "line")
plot_ly(homicidesum, x = ~month, y = ~n, color = ~as.factor(year),
type = "scatter",
mode = "lines")
t <- matrix(sort(rnorm(10*10)), nrow=100, ncol=100)
t
str(t)
plot_ly(z = ~t, type = "surface")
plot_ly(homicidesum, x = ~month, y = ~n, color = ~as.factor(year),
type = "scatter",
mode = "lines")
homicidesum <- homicides %>% filter(year = 2006 | year = 2016) %>% count(year, month) %>% arrange(year)
s
homicidesum <- homicides %>% filter(year == 2006 | year == 2016) %>% count(year, month) %>% arrange(year)
plot_ly(homicidesum, x = ~month, y = ~n, color = ~as.factor(year),
type = "scatter",
mode = "lines")
homicidesum <- homicides %>% filter(year < 2017) %>% count(month) %>% arrange(month)
plot_ly(homicidesum, x = ~month, y = ~n,
type = "scatter",
mode = "lines")
plot_ly(homicidesum, x = ~month, y = ~n//11,
type = "scatter",
mode = "lines")
plot_ly(homicidesum, x = ~month, y = ~(n//11),
type = "scatter",
mode = "lines")
homicidesum$n <- homicidesum$n/11
plot_ly(homicidesum, x = ~month, y = ~n,
type = "scatter",
mode = "lines")
str(crimedata)
crimedata %>% group_by(text_general_code) %>% summarize(length(text_general_code))
crimedata <- read.csv("C:/Users/Dave/Documents/Data Science/Coursera/Data Products/Week 2/PhiladelphiaCrimeIncidents.csv",
stringsAsFactors = FALSE)
crimedata <- read.csv("C:/Users/Dave/Documents/Data Science/Coursera/Data Products/Week 2/PhiladelphiaCrimeIncidents.csv",
stringsAsFactors = FALSE)
crimedata$dispatch_date <- as.Date(crimedata$dispatch_date)
crimedata$year <- year(crimedata$dispatch_date)
crimedata$month <- month(crimedata$dispatch_date)
crimedata$day <- day(crimedata$dispatch_date)
crimedata$text_general_code <- gsub(" $", "", crimedata$text_general_code, perl=TRUE) # Remove trailing blanks
library(leaflet)
library(lubridate)
library(dplyr)
crimedata$year <- year(crimedata$dispatch_date)
crimedata$month <- month(crimedata$dispatch_date)
crimedata$day <- day(crimedata$dispatch_date)
crimedata$text_general_code <- gsub(" $", "", crimedata$text_general_code, perl=TRUE) # Remove trailing blanks
crimedata %>% group_by(text_general_code) %>% summarize(length(text_general_code))
crimedata %>% group_by(text_general_code) %>% summarize(n = length(text_general_code)) %>% arrange(desc n)
crimedata %>% group_by(text_general_code) %>% summarize(n = length(text_general_code)) %>% arrange(desc(n))
crimecounts <- crimedata %>% group_by(text_general_code) %>% summarize(n = length(text_general_code)) %>% arrange(desc(n))
View(crimecounts)
library(plotly)
library(dplyr)
library(lubridate)
crimedata <- read.csv("C:/Users/Dave/Documents/Data Science/Coursera/Data Products/Week 2/PhiladelphiaCrimeIncidents.csv",
stringsAsFactors = FALSE)
crimedata$dispatch_date <- as.Date(crimedata$dispatch_date)
crimedata$year <- year(crimedata$dispatch_date)
crimedata$month <- month(crimedata$dispatch_date)
crimedata$day <- day(crimedata$dispatch_date)
crimedata$text_general_code <- gsub(" $", "", crimedata$text_general_code, perl=TRUE) # Remove trailing blanks
rapedata <- crimedata %>% filter(text_general_code == "Rape" & year < 2017)
rapesum <- rapedata %>% filter(year < 2017 & text_general_code == "Rape") %>% count(year) %>% arrange(year)
rapesum
plot_ly(rapesum, x = ~year, y = ~n,
type = "scatter",
mode = "lines")
g <- list(
scope = 'north america',
showland = TRUE,
landcolor = toRGB("grey83"),
subunitcolor = toRGB("white"),
countrycolor = toRGB("white"),
showlakes = TRUE,
lakecolor = toRGB("white"),
showsubunits = TRUE,
showcountries = TRUE,
resolution = 50,
projection = list(
type = 'conic conformal',
rotation = list(lon = -100)
),
lonaxis = list(
showgrid = TRUE,
gridwidth = 0.5,
range = c(-140, -55),
dtick = 5
),
lataxis = list(
showgrid = TRUE,
gridwidth = 0.5,
range = c(20, 60),
dtick = 5
)
)
p <- plot_geo(rapedata[year==2016,], lat = ~lat, lon = ~lng) %>%
add_markers(
text = ~dispatch_date, hoverinfo = "text"
) %>%
layout(title = 'Reported Rapes in Philadelphia in 2016', geo = g)
rape2016 <- rapedata[year=2016,]
rape2016 <- rapedata[year==2016,]
str(rapedata)
rape2016 <- rapedata %>% filter(year = 2016)
rape2016 <- rapedata %>% filter(year == 2016)
str(rape2016)
p <- plot_geo(rape2016, lat = ~lat, lon = ~lng) %>%
add_markers(
text = ~dispatch_date, hoverinfo = "text"
) %>%
layout(title = 'Reported Rapes in Philadelphia in 2016', geo = g)
chart_link = plotly_POST(p, filename="maps/phillyrape2016")
Sys.setenv("plotly_username"="dleonard")
Sys.setenv("plotly_api_key"="7bdQpAObjEaKLnLrK8Ha")
chart_link = plotly_POST(p, filename="maps/phillyrape2016")
p
lonaxis = list(
showgrid = TRUE,
gridwidth = 0.5,
range = c(75,77),
dtick = 5
),
lataxis = list(
showgrid = TRUE,
gridwidth = 0.5,
range = c(40,42),
dtick = 5
)
)
rape2016 <- rapedata %>% filter(year == 2016)
p <- plot_geo(rape2016, lat = ~lat, lon = ~lng) %>%
add_markers(
text = ~dispatch_date, hoverinfo = "text"
) %>%
layout(title = 'Reported Rapes in Philadelphia in 2016', geo = g)
p
plot_ly(rapesum, x = ~year, y = ~n,
type = "bar",
name = "Reported Rapes in Philadelphia in 2016")
rapesum <- rapedata %>% filter(year < 2017 & text_general_code == "Rape") %>% count(month) %>% arrange(month)
plot_ly(rapesum, x = ~month, y = ~n,
type = "bar",
name = "Reported Rapes in Philadelphia in 2016")
plot_ly(rapesum, x = ~month, y = ~n,
type = "scatter", mode = "line",
name = "Reported Rapes in Philadelphia in 2016")
rapesum <- rapedata %>% filter(year < 2017 & text_general_code == "Rape") %>% count(year) %>% arrange(year)
plot_ly(rapesum, x = ~year, y = ~n,
type = "bar") %>%
layout(title = 'Reported Rapes in Philadelphia in 2016')
plot_ly(rapesum, x = ~year, y = ~n,
type = "bar",
xaxis = "Year",
yaxis = "Number of Reported Rapes") %>%
layout(title = 'Reported Rapes in Philadelphia 2006-2016')
plot_ly(rapesum, x = ~year, y = ~n,
type = "bar",
xaxis = list(title="Year"),
yaxis = list(title="Number of Reported Rapes")) %>%
layout(title = 'Reported Rapes in Philadelphia 2006-2016')
plot_ly(rapesum, x = ~year, y = ~n,
type = "bar") %>%
layout(title = 'Reported Rapes in Philadelphia 2006-2016',
xaxis = list(title="Year"),
yaxis = list(title="Number of Reported Rapes"))
install.packages("devtools")
library(devtools)
install_github("slidify", "ramnathv")
install_github("slidifyLibraries","ramnathv")
author("mydeck")
slidify::author("mydeck")
getwd()
setwd("../../Week 4")
getwd()
author("Course Project")
library(slidify)
author("Course Project")
unlink('index_cache', recursive = TRUE)
dev.off()
dev.off()
author("test")
slidify("index.Rmd")
